[TMainForm.FCForward] ==== Delphi Test ===================================================
[TMainForm.FCForward] XData=[1,1,1,1,1]
[TMainForm.FCForward] YTrue=[0,0]
[TMainForm.FCForward] Start Weights For Layer #0: [[2.52810471,-0.1996856,0.9574759,3.48178654,2.73511594],[-2.95455577,0.90017682,-1.30271442,-1.20643768,-0.17880305]]
[TMainForm.FCForward] Start Biases For Layer #0: [-0.07119128,0.19085471]
[TMainForm.FCForward] ---- Backward pass 1/1
[TMainForm.FCForward] loss=54.83558018
[TMainForm.FCForward] YData=[9.43160621,-4.5514794]
==== Python Test ===================================================
---- X:\Projects\KR\Test\NeuralNetwork\nn\NeuralNetwork\tests\py\fc_backward.py
epsilon= 1e-10
xdata: [[1. 1. 1. 1. 1.]]
y_true: [[0. 0.]]
Start Weights For Layer #0: [[ 2.52810471 -2.95455577]
 [-0.1996856   0.90017682]
 [ 0.9574759  -1.30271442]
 [ 3.48178654 -1.20643768]
 [ 2.73511594 -0.17880305]]
Start Biases For Layer #0: [-0.07119128  0.19085471]
Backward pass 1/1
predictions= tf.Tensor([[ 9.43160621 -4.5514794 ]], shape=(1, 2), dtype=float64)
loss= tf.Tensor(54.835580175512774, shape=(), dtype=float64)
gradients= [<tf.Tensor: shape=(5, 2), dtype=float64, numpy=
array([[ 9.43160621, -4.5514794 ],
       [ 9.43160621, -4.5514794 ],
       [ 9.43160621, -4.5514794 ],
       [ 9.43160621, -4.5514794 ],
       [ 9.43160621, -4.5514794 ]])>, <tf.Tensor: shape=(2,), dtype=float64, numpy=array([ 9.43160621, -4.5514794 ])>]
ydata: [[ 8.86570984 -4.27839063]]

[TMainForm.LossesTest] ==== Result ===================================================
[TMainForm.FCForward] == YDataDiff: 
[TMainForm.FCForward] ERROR: = YData[0]: 0,565896372470403
[TMainForm.FCForward] ERROR: = YData[1]: 0,273088763753709
[TMainForm.FCForward] ==== Delphi Test ===================================================
[TMainForm.FCForward] XData=[1,1,1,1,1]
[TMainForm.FCForward] YTrue=[0,0]
[TMainForm.FCForward] Start Weights For Layer #0: [[2.52810471,-0.1996856,0.9574759,3.48178654,2.73511594],[-2.95455577,0.90017682,-1.30271442,-1.20643768,-0.17880305]]
[TMainForm.FCForward] Start Biases For Layer #0: [-0.07119128,0.19085471]
[TMainForm.FCForward] ---- Backward pass 1/1
[TMainForm.FCForward] loss=54.83558018
[TMainForm.FCForward] YData=[9.43160621,-4.5514794]
==== Python Test ===================================================
---- X:\Projects\KR\Test\NeuralNetwork\nn\NeuralNetwork\tests\py\fc_backward.py
epsilon= 1e-10
xdata: [[1. 1. 1. 1. 1.]]
y_true: [[0. 0.]]
Start Weights For Layer #0: [[ 2.52810471 -2.95455577]
 [-0.1996856   0.90017682]
 [ 0.9574759  -1.30271442]
 [ 3.48178654 -1.20643768]
 [ 2.73511594 -0.17880305]]
Start Biases For Layer #0: [-0.07119128  0.19085471]
Backward pass 1/1
predictions= tf.Tensor([[ 9.43160621 -4.5514794 ]], shape=(1, 2), dtype=float64)
loss= tf.Tensor(54.835580175512774, shape=(), dtype=float64)
gradients= [<tf.Tensor: shape=(5, 2), dtype=float64, numpy=
array([[ 9.43160621, -4.5514794 ],
       [ 9.43160621, -4.5514794 ],
       [ 9.43160621, -4.5514794 ],
       [ 9.43160621, -4.5514794 ],
       [ 9.43160621, -4.5514794 ]])>, <tf.Tensor: shape=(2,), dtype=float64, numpy=array([ 9.43160621, -4.5514794 ])>]
Traceback (most recent call last):
  File "X:\Projects\KR\Test\NeuralNetwork\nn\NeuralNetwork\tests\py\fc_backward.py", line 119, in <module>
    save_float64_array_to_binary_file(w_grad.numpy().T, file_path) # Transpose back to match your convention
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "X:\Projects\KR\Test\NeuralNetwork\nn\NeuralNetwork\tests\py\my_funcs.py", line 31, in save_float64_array_to_binary_file
    flat_array.extend(g.numpy().astype('float64').flatten())
                      ^^^^^^^
AttributeError: 'numpy.float64' object has no attribute 'numpy'. Did you mean: 'dump'?

[TMainForm.LossesTest] ==== Result ===================================================
[TMainForm.FCForward] ERROR: not FileExists('X:\Projects\KR\Test\NeuralNetwork\nn\NeuralNetwork\tests\data\20250820\FC_Forward141644\ydata.dat')
[TMainForm.FCForward] ==== Delphi Test ===================================================
[TMainForm.FCForward] XData=[1,1,1,1,1]
[TMainForm.FCForward] YTrue=[0,0]
[TMainForm.FCForward] Start Weights For Layer #0: [[2.52810471,-0.1996856,0.9574759,3.48178654,2.73511594],[-2.95455577,0.90017682,-1.30271442,-1.20643768,-0.17880305]]
[TMainForm.FCForward] Start Biases For Layer #0: [-0.07119128,0.19085471]
[TMainForm.FCForward] ---- Backward pass 1/1
[TMainForm.FCForward] loss=54.83558018
[TMainForm.FCForward] YData=[9.43160621,-4.5514794]
==== Python Test ===================================================
---- X:\Projects\KR\Test\NeuralNetwork\nn\NeuralNetwork\tests\py\fc_backward.py
epsilon= 1e-10
xdata: [[1. 1. 1. 1. 1.]]
y_true: [[0. 0.]]
Start Weights For Layer #0: [[ 2.52810471 -2.95455577]
 [-0.1996856   0.90017682]
 [ 0.9574759  -1.30271442]
 [ 3.48178654 -1.20643768]
 [ 2.73511594 -0.17880305]]
Start Biases For Layer #0: [-0.07119128  0.19085471]
Backward pass 1/1
predictions= tf.Tensor([[ 9.43160621 -4.5514794 ]], shape=(1, 2), dtype=float64)
loss= tf.Tensor(54.835580175512774, shape=(), dtype=float64)
gradients= [<tf.Tensor: shape=(5, 2), dtype=float64, numpy=
array([[ 9.43160621, -4.5514794 ],
       [ 9.43160621, -4.5514794 ],
       [ 9.43160621, -4.5514794 ],
       [ 9.43160621, -4.5514794 ],
       [ 9.43160621, -4.5514794 ]])>, <tf.Tensor: shape=(2,), dtype=float64, numpy=array([ 9.43160621, -4.5514794 ])>]
w_grad0_pass0: [ 9.43160621 -4.5514794 ]
b_grad0_pass0: [ 9.43160621 -4.5514794 ]
w0_pass0: [[ 2.52810471 -0.1996856   0.9574759   3.48178654  2.73511594]
 [-2.95455577  0.90017682 -1.30271442 -1.20643768 -0.17880305]]
b0_pass0: [-0.07119128  0.19085471]
ydata: [[ 8.86570984 -4.27839063]]

[TMainForm.LossesTest] ==== Result ===================================================
[TMainForm.FCForward] == YDataDiff: 
[TMainForm.FCForward] ERROR: = YData[0]: 0,565896372470403
[TMainForm.FCForward] ERROR: = YData[1]: 0,273088763753709
[TMainForm.FCForward] ==== Delphi Test ===================================================
[TMainForm.FCForward] XData=[1,1,1,1,1]
[TMainForm.FCForward] YTrue=[0,0]
[TMainForm.FCForward] Start Weights For Layer #0: [[2.52810471,-0.1996856,0.9574759,3.48178654,2.73511594],[-2.95455577,0.90017682,-1.30271442,-1.20643768,-0.17880305]]
[TMainForm.FCForward] Start Biases For Layer #0: [-0.07119128,0.19085471]
[TMainForm.FCForward] ---- Backward pass 1/1
[TMainForm.FCForward] loss=54.83558018
[TMainForm.FCForward] YData=[9.43160621,-4.5514794]
==== Python Test ===================================================
---- X:\Projects\KR\Test\NeuralNetwork\nn\NeuralNetwork\tests\py\fc_backward.py
epsilon= 1e-10
xdata: [[1. 1. 1. 1. 1.]]
y_true: [[0. 0.]]
Start Weights For Layer #0: [[ 2.52810471 -2.95455577]
 [-0.1996856   0.90017682]
 [ 0.9574759  -1.30271442]
 [ 3.48178654 -1.20643768]
 [ 2.73511594 -0.17880305]]
Start Biases For Layer #0: [-0.07119128  0.19085471]
Backward pass 1/1
predictions= [[ 9.43160621 -4.5514794 ]]
loss= 54.835580175512774
Total gradients: 2

--- Layer 0: dense ---
Weight gradients shape: (5, 2)
Weight gradients sample: [ 9.43160621 -4.5514794   9.43160621 -4.5514794   9.43160621]
Weights shape: (5, 2)
Weights sample: [ 2.52810471 -2.95455577 -0.1996856   0.90017682  0.9574759 ]
Traceback (most recent call last):
  File "X:\Projects\KR\Test\NeuralNetwork\nn\NeuralNetwork\tests\py\fc_backward.py", line 134, in <module>
    save_float64_array_to_binary_file(w.T, file_path)
  File "X:\Projects\KR\Test\NeuralNetwork\nn\NeuralNetwork\tests\py\my_funcs.py", line 31, in save_float64_array_to_binary_file
    flat_array.extend(g.numpy().astype('float64').flatten())
                      ^^^^^^^
AttributeError: 'numpy.ndarray' object has no attribute 'numpy'. Did you mean: 'dump'?

[TMainForm.LossesTest] ==== Result ===================================================
[TMainForm.FCForward] ERROR: not FileExists('X:\Projects\KR\Test\NeuralNetwork\nn\NeuralNetwork\tests\data\20250820\FC_Forward142240\ydata.dat')
[TMainForm.FCForward] ==== Delphi Test ===================================================
[TMainForm.FCForward] XData=[1,1,1,1,1]
[TMainForm.FCForward] YTrue=[0,0]
[TMainForm.FCForward] Start Weights For Layer #0: [[2.52810471,-0.1996856,0.9574759,3.48178654,2.73511594],[-2.95455577,0.90017682,-1.30271442,-1.20643768,-0.17880305]]
[TMainForm.FCForward] Start Biases For Layer #0: [-0.07119128,0.19085471]
[TMainForm.FCForward] ---- Backward pass 1/1
[TMainForm.FCForward] loss=54.83558018
[TMainForm.FCForward] YData=[9.43160621,-4.5514794]
==== Python Test ===================================================
---- X:\Projects\KR\Test\NeuralNetwork\nn\NeuralNetwork\tests\py\fc_backward.py
epsilon= 1e-10
xdata: [[1. 1. 1. 1. 1.]]
y_true: [[0. 0.]]
Start Weights For Layer #0: [[ 2.52810471 -2.95455577]
 [-0.1996856   0.90017682]
 [ 0.9574759  -1.30271442]
 [ 3.48178654 -1.20643768]
 [ 2.73511594 -0.17880305]]
Start Biases For Layer #0: [-0.07119128  0.19085471]
Backward pass 1/1
predictions= [[ 9.43160621 -4.5514794 ]]
loss= 54.835580175512774
Total gradients: 2

--- Layer 0: dense ---
Weight gradients shape: (5, 2)
Weight gradients sample: [ 9.43160621 -4.5514794   9.43160621 -4.5514794   9.43160621]
Weights shape: (5, 2)
Weights sample: [ 2.52810471 -2.95455577 -0.1996856   0.90017682  0.9574759 ]
Bias gradients shape: (2,)
Bias gradients: [ 9.43160621 -4.5514794 ]
Biases: [-0.07119128  0.19085471]
ydata: [[ 8.86570984 -4.27839063]]

[TMainForm.LossesTest] ==== Result ===================================================
[TMainForm.FCForward] == YDataDiff: 
[TMainForm.FCForward] ERROR: = YData[0]: 0,565896372470403
[TMainForm.FCForward] ERROR: = YData[1]: 0,273088763753709
[TMainForm.FCForward] ==== Delphi Test ===================================================
[TMainForm.FCForward] XData=[1,1,1,1,1]
[TMainForm.FCForward] YTrue=[0,0]
[TMainForm.FCForward] Start Weights For Layer #0: [[2.52810471,-0.1996856,0.9574759,3.48178654,2.73511594],[-2.95455577,0.90017682,-1.30271442,-1.20643768,-0.17880305]]
[TMainForm.FCForward] Start Biases For Layer #0: [-0.07119128,0.19085471]
[TMainForm.FCForward] ---- Backward pass 1/1
[TMainForm.FCForward] loss=54.83558018
[TMainForm.FCForward] YData=[9.43160621,-4.5514794]
==== Python Test ===================================================
---- X:\Projects\KR\Test\NeuralNetwork\nn\NeuralNetwork\tests\py\fc_backward.py
epsilon= 1e-10
xdata: [[1. 1. 1. 1. 1.]]
y_true: [[0. 0.]]
Start Weights For Layer #0: [[ 2.52810471 -2.95455577]
 [-0.1996856   0.90017682]
 [ 0.9574759  -1.30271442]
 [ 3.48178654 -1.20643768]
 [ 2.73511594 -0.17880305]]
Start Biases For Layer #0: [-0.07119128  0.19085471]
Backward pass 1/1
predictions= [[ 9.43160621 -4.5514794 ]]
loss= 54.835580175512774
Total gradients: 2

--- Layer 0: dense ---
Weight gradients shape: (5, 2)
Weight gradients sample: [[ 9.43160621 -4.5514794 ]
 [ 9.43160621 -4.5514794 ]
 [ 9.43160621 -4.5514794 ]
 [ 9.43160621 -4.5514794 ]
 [ 9.43160621 -4.5514794 ]]
Weights shape: (5, 2)
Weights sample: [[ 2.52810471 -2.95455577]
 [-0.1996856   0.90017682]
 [ 0.9574759  -1.30271442]
 [ 3.48178654 -1.20643768]
 [ 2.73511594 -0.17880305]]
Bias gradients shape: (2,)
Bias gradients: [ 9.43160621 -4.5514794 ]
Biases: [-0.07119128  0.19085471]
ydata: [[ 8.86570984 -4.27839063]]

[TMainForm.LossesTest] ==== Result ===================================================
[TMainForm.FCForward] == YDataDiff: 
[TMainForm.FCForward] ERROR: = YData[0]: 0,565896372470403
[TMainForm.FCForward] ERROR: = YData[1]: 0,273088763753709
[TMainForm.FCForward] ==== Delphi Test ===================================================
[TMainForm.FCForward] XData=[1,1,1,1,1]
[TMainForm.FCForward] YTrue=[0,0]
[TMainForm.FCForward] Start Weights For Layer #0: [[2.52810471,-0.1996856,0.9574759,3.48178654,2.73511594],[-2.95455577,0.90017682,-1.30271442,-1.20643768,-0.17880305]]
[TMainForm.FCForward] Start Biases For Layer #0: [-0.07119128,0.19085471]
[TMainForm.FCForward] ---- Backward pass 1/1
[TMainForm.FCForward] loss=54.83558018
[TMainForm.FCForward] YData=[9.43160621,-4.5514794]
  File "X:\Projects\KR\Test\NeuralNetwork\nn\NeuralNetwork\tests\py\fc_backward.py", line 154
    if layer.use_bias
                     ^
SyntaxError: expected ':'

[TMainForm.LossesTest] ==== Result ===================================================
[TMainForm.FCForward] ERROR: not FileExists('X:\Projects\KR\Test\NeuralNetwork\nn\NeuralNetwork\tests\data\20250820\FC_Forward142830\ydata.dat')
[TMainForm.FCForward] ==== Delphi Test ===================================================
[TMainForm.FCForward] XData=[1,1,1,1,1]
[TMainForm.FCForward] YTrue=[0,0]
[TMainForm.FCForward] Start Weights For Layer #0: [[2.52810471,-0.1996856,0.9574759,3.48178654,2.73511594],[-2.95455577,0.90017682,-1.30271442,-1.20643768,-0.17880305]]
[TMainForm.FCForward] Start Biases For Layer #0: [-0.07119128,0.19085471]
[TMainForm.FCForward] ---- Backward pass 1/1
[TMainForm.FCForward] loss=54.83558018
[TMainForm.FCForward] YData=[9.43160621,-4.5514794]
==== Python Test ===================================================
---- X:\Projects\KR\Test\NeuralNetwork\nn\NeuralNetwork\tests\py\fc_backward.py
epsilon= 1e-10
xdata: [[1. 1. 1. 1. 1.]]
y_true: [[0. 0.]]
Start Weights For Layer #0: [[ 2.52810471 -2.95455577]
 [-0.1996856   0.90017682]
 [ 0.9574759  -1.30271442]
 [ 3.48178654 -1.20643768]
 [ 2.73511594 -0.17880305]]
Start Biases For Layer #0: [-0.07119128  0.19085471]
Backward pass 1/1
predictions= [[ 9.43160621 -4.5514794 ]]
loss= 54.835580175512774
Total gradients: 2

--- Layer 0: dense ---
WeightsGrads: [[ 9.43160621 -4.5514794 ]
 [ 9.43160621 -4.5514794 ]
 [ 9.43160621 -4.5514794 ]
 [ 9.43160621 -4.5514794 ]
 [ 9.43160621 -4.5514794 ]]
BiasesGrads: [ 9.43160621 -4.5514794 ]
Weights: [[ 2.43378865 -2.90904098]
 [-0.29400166  0.94569162]
 [ 0.86315984 -1.25719963]
 [ 3.38747048 -1.16092289]
 [ 2.64079987 -0.13328826]]
Biases: [-0.16550735  0.2363695 ]
ydata: [[ 8.86570984 -4.27839063]]

[TMainForm.LossesTest] ==== Result ===================================================
[TMainForm.FCForward] == YDataDiff: 
[TMainForm.FCForward] ERROR: = YData[0]: 0,565896372470403
[TMainForm.FCForward] ERROR: = YData[1]: 0,273088763753709
